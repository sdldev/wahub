version: '3.8'

services:
  # MySQL Database
  mysql:
    image: mysql:8.0
    container_name: wahub-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-root_password}
      MYSQL_DATABASE: ${DB_NAME:-wahub}
      MYSQL_USER: ${DB_USER:-wahub_user}
      MYSQL_PASSWORD: ${DB_PASSWORD:-wahub_password}
    ports:
      - "${DB_PORT:-3306}:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - wahub-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p$$MYSQL_ROOT_PASSWORD"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  # Backend API
  backend:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: wahub-backend
    restart: unless-stopped
    ports:
      - "${PORT:-5001}:5001"
    environment:
      - NODE_ENV=production
      - PORT=5001
      - KEY=${KEY:-your-secure-api-key}
      - DB_TYPE=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=${DB_USER:-wahub_user}
      - DB_PASSWORD=${DB_PASSWORD:-wahub_password}
      - DB_NAME=${DB_NAME:-wahub}
      - JWT_SECRET=${JWT_SECRET:-your-jwt-secret-change-in-production}
      - JWT_EXPIRES_IN=7d
      - ENCRYPTION_KEY=${ENCRYPTION_KEY:-your-encryption-key-change-in-production}
      - WEBHOOK_BASE_URL=${WEBHOOK_BASE_URL:-}
      - MESSAGE_DELAY_MIN=${MESSAGE_DELAY_MIN:-3000}
      - MESSAGE_DELAY_MAX=${MESSAGE_DELAY_MAX:-7000}
      - MAX_MESSAGES_PER_MINUTE=${MAX_MESSAGES_PER_MINUTE:-20}
      - MAX_MESSAGES_PER_HOUR=${MAX_MESSAGES_PER_HOUR:-500}
      - MAX_MESSAGES_PER_RECIPIENT=${MAX_MESSAGES_PER_RECIPIENT:-10}
      - MAX_RETRY_ATTEMPTS=${MAX_RETRY_ATTEMPTS:-3}
    volumes:
      - wa_credentials:/app/wa_credentials
      - media_files:/app/media
      - logs_data:/app/logs
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - wahub-network
    healthcheck:
      test: ["CMD", "node", "-e", "const http = require('http'); const options = { hostname: 'localhost', port: 5001, path: '/health', timeout: 2000 }; const req = http.request(options, (res) => { if (res.statusCode === 200) process.exit(0); else process.exit(1); }); req.on('error', () => process.exit(1)); req.end();"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Frontend Dashboard
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: wahub-frontend
    restart: unless-stopped
    ports:
      - "3000:80"
    environment:
      - VITE_API_URL=http://localhost:5001
    depends_on:
      - backend
    networks:
      - wahub-network
    profiles:
      - frontend

  # Nginx Reverse Proxy (Optional)
  nginx:
    image: nginx:alpine
    container_name: wahub-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - backend
      - frontend
    networks:
      - wahub-network
    profiles:
      - nginx

  # Adminer - MySQL Management UI (Optional)
  adminer:
    image: adminer
    container_name: wahub-adminer
    restart: unless-stopped
    ports:
      - "8080:8080"
    depends_on:
      - mysql
    networks:
      - wahub-network
    profiles:
      - adminer

volumes:
  mysql_data:
    driver: local
  wa_credentials:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./wa_credentials
  media_files:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./media
  logs_data:
    driver: local

networks:
  wahub-network:
    driver: bridge
    name: wahub-network